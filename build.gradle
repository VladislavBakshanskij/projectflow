plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id "io.freefair.lombok" version '6.3.0'
    id 'nu.studer.jooq' version '6.0.1'
    id 'java'
}

group = 'io.amtech'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web' // todo replace into webflux

    implementation 'org.apache.commons:commons-lang3'
    implementation 'commons-collections:commons-collections:3.2.2'

    implementation 'org.liquibase:liquibase-core'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.testcontainers:junit-jupiter'

    jooqGenerator 'org.postgresql:postgresql'
}

jooq {
    configurations {
        main {
            generationTool {
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = "jdbc:postgresql://localhost:5432/projectflow"
                    user = 'postgres'
                    password = 'pass'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'pf'
                    }
                    generate {
                        deprecated = false
                        records = false
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        packageName = 'io.amtech.projectflow.jooq'
                        directory = 'src/generated/java'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}

test {
    useJUnitPlatform()
}
